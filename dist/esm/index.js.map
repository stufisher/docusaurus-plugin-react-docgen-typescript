{
  "version": 3,
  "sources": ["../../src/index.ts"],
  "sourcesContent": ["import path from 'path';\nimport { promisify } from 'util';\nimport Glob from 'glob';\n\nimport {\n  withCustomConfig,\n  ParserOptions,\n  ComponentDoc,\n  FileParser,\n  withCompilerOptions,\n  withDefaultConfig,\n} from 'react-docgen-typescript';\n\nimport { Plugin, DocusaurusContext, RouteConfig } from '@docusaurus/types';\nimport { CompilerOptions } from 'typescript';\n\nconst glob = promisify(Glob);\n\ntype Route = Pick<RouteConfig, 'exact' | 'component' | 'path' | 'priority'>;\n\ntype Union =\n  | {\n      global?: undefined | false;\n      route: Route;\n    }\n  | {\n      global: boolean;\n      route?: Route;\n    };\n\nexport type Options = Union & {\n  src: string | string[];\n  tsConfig?: string;\n  compilerOptions?: CompilerOptions;\n  parserOptions?: ParserOptions;\n  globOptions: null;\n};\n\nconst getParser = (\n  config?: Options['tsConfig'],\n  options?: Options['compilerOptions'],\n  parserOptions?: Options['parserOptions']\n): FileParser['parse'] => {\n  if (config) {\n    return withCustomConfig(config, parserOptions).parse;\n  } else if (options) {\n    return withCompilerOptions(options, parserOptions).parse;\n  }\n\n  return withDefaultConfig(parserOptions).parse;\n};\n\nexport default function plugin(\n  context: DocusaurusContext,\n  { src, global = false, route, tsConfig, compilerOptions, parserOptions }: Options\n): Plugin<ComponentDoc[]> {\n  return {\n    name: 'docusaurus-plugin-react-docgen-typescript',\n    async loadContent() {\n      return getParser(\n        tsConfig,\n        compilerOptions,\n        parserOptions\n      )(\n        await glob(Array.isArray(src) ? src.join(',') : src, {\n          absolute: true,\n        })\n      );\n    },\n    configureWebpack(config) {\n      return {\n        resolve: {\n          alias: {\n            '@docgen': path.join(\n              config.resolve.alias['@generated'],\n              'docusaurus-plugin-react-docgen-typescript',\n              'default'\n            ),\n          },\n        },\n      };\n    },\n    async contentLoaded({ content, actions }): Promise<void> {\n      const { createData, setGlobalData, addRoute } = actions;\n\n      if (global) {\n        console.warn(\n          'Using global data can potentially slow down your entire app. Use with care \u2764\uFE0F'\n        );\n\n        setGlobalData(content);\n      } else if (route) {\n        addRoute({\n          ...route,\n          modules: {\n            docgen: await createData('docgen.json', JSON.stringify(content)),\n          },\n        });\n      } else {\n        const processed = {};\n        content.map(component => {\n          let fileName = component.displayName;\n          if (component.displayName in processed) {\n            console.warn(\n              `Duplicate component '${component.displayName}' found (existing: ${processed[fileName][0]})`\n            );\n\n            fileName += `${processed[fileName].length}`;\n            console.warn(`'${component.filePath}' will be written to '${fileName}.json'`);\n          }\n          createData(`${fileName}.json`, JSON.stringify(component.props));\n          if (!(fileName in processed)) {\n            processed[fileName] = [];\n          }\n          processed[fileName].push(component.filePath);\n        });\n      }\n    },\n  };\n}\n"],
  "mappings": "AAAA,OAAO,UAAU;AACjB,SAAS,iBAAiB;AAC1B,OAAO,UAAU;AAEjB;AAAA,EACE;AAAA,EAIA;AAAA,EACA;AAAA,OACK;AAKP,MAAM,OAAO,UAAU,IAAI;AAsB3B,MAAM,YAAY,CAChB,QACA,SACA,kBACwB;AACxB,MAAI,QAAQ;AACV,WAAO,iBAAiB,QAAQ,aAAa,EAAE;AAAA,EACjD,WAAW,SAAS;AAClB,WAAO,oBAAoB,SAAS,aAAa,EAAE;AAAA,EACrD;AAEA,SAAO,kBAAkB,aAAa,EAAE;AAC1C;AAEe,SAAR,OACL,SACA,EAAE,KAAK,SAAS,OAAO,OAAO,UAAU,iBAAiB,cAAc,GAC/C;AACxB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,MAAM,cAAc;AAClB,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,QACE,MAAM,KAAK,MAAM,QAAQ,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,KAAK;AAAA,UACnD,UAAU;AAAA,QACZ,CAAC;AAAA,MACH;AAAA,IACF;AAAA,IACA,iBAAiB,QAAQ;AACvB,aAAO;AAAA,QACL,SAAS;AAAA,UACP,OAAO;AAAA,YACL,WAAW,KAAK;AAAA,cACd,OAAO,QAAQ,MAAM,YAAY;AAAA,cACjC;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA,MAAM,cAAc,EAAE,SAAS,QAAQ,GAAkB;AACvD,YAAM,EAAE,YAAY,eAAe,SAAS,IAAI;AAEhD,UAAI,QAAQ;AACV,gBAAQ;AAAA,UACN;AAAA,QACF;AAEA,sBAAc,OAAO;AAAA,MACvB,WAAW,OAAO;AAChB,iBAAS;AAAA,UACP,GAAG;AAAA,UACH,SAAS;AAAA,YACP,QAAQ,MAAM,WAAW,eAAe,KAAK,UAAU,OAAO,CAAC;AAAA,UACjE;AAAA,QACF,CAAC;AAAA,MACH,OAAO;AACL,cAAM,YAAY,CAAC;AACnB,gBAAQ,IAAI,eAAa;AACvB,cAAI,WAAW,UAAU;AACzB,cAAI,UAAU,eAAe,WAAW;AACtC,oBAAQ;AAAA,cACN,wBAAwB,UAAU,iCAAiC,UAAU,QAAQ,EAAE,CAAC;AAAA,YAC1F;AAEA,wBAAY,GAAG,UAAU,QAAQ,EAAE;AACnC,oBAAQ,KAAK,IAAI,UAAU,iCAAiC,gBAAgB;AAAA,UAC9E;AACA,qBAAW,GAAG,iBAAiB,KAAK,UAAU,UAAU,KAAK,CAAC;AAC9D,cAAI,EAAE,YAAY,YAAY;AAC5B,sBAAU,QAAQ,IAAI,CAAC;AAAA,UACzB;AACA,oBAAU,QAAQ,EAAE,KAAK,UAAU,QAAQ;AAAA,QAC7C,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AACF;",
  "names": []
}
